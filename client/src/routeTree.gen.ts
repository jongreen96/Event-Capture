/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WelcomeImport } from './routes/welcome'
import { Route as SignInImport } from './routes/sign-in'
import { Route as AuthenticatedImport } from './routes/_authenticated'
import { Route as IndexImport } from './routes/index'
import { Route as AuthenticatedPlansImport } from './routes/_authenticated/plans'
import { Route as AuthenticatedDashboardRouteImport } from './routes/_authenticated/dashboard/route'
import { Route as AuthenticatedDashboardIndexImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedDashboardGuestsImport } from './routes/_authenticated/dashboard/guests'
import { Route as AuthenticatedDashboardPhotosIndexImport } from './routes/_authenticated/dashboard/photos/index'
import { Route as AuthenticatedDashboardPhotosPhotoIdImport } from './routes/_authenticated/dashboard/photos/$photoId'

// Create/Update Routes

const WelcomeRoute = WelcomeImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRoute,
} as any)

const SignInRoute = SignInImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedRoute = AuthenticatedImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthenticatedPlansRoute = AuthenticatedPlansImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => AuthenticatedRoute,
} as any)

const AuthenticatedDashboardRouteRoute =
  AuthenticatedDashboardRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)

const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardGuestsRoute =
  AuthenticatedDashboardGuestsImport.update({
    id: '/guests',
    path: '/guests',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardPhotosIndexRoute =
  AuthenticatedDashboardPhotosIndexImport.update({
    id: '/photos/',
    path: '/photos/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

const AuthenticatedDashboardPhotosPhotoIdRoute =
  AuthenticatedDashboardPhotosPhotoIdImport.update({
    id: '/photos/$photoId',
    path: '/photos/$photoId',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInImport
      parentRoute: typeof rootRoute
    }
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeImport
      parentRoute: typeof rootRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/plans': {
      id: '/_authenticated/plans'
      path: '/plans'
      fullPath: '/plans'
      preLoaderRoute: typeof AuthenticatedPlansImport
      parentRoute: typeof AuthenticatedImport
    }
    '/_authenticated/dashboard/guests': {
      id: '/_authenticated/dashboard/guests'
      path: '/guests'
      fullPath: '/dashboard/guests'
      preLoaderRoute: typeof AuthenticatedDashboardGuestsImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthenticatedDashboardIndexImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/dashboard/photos/$photoId': {
      id: '/_authenticated/dashboard/photos/$photoId'
      path: '/photos/$photoId'
      fullPath: '/dashboard/photos/$photoId'
      preLoaderRoute: typeof AuthenticatedDashboardPhotosPhotoIdImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
    '/_authenticated/dashboard/photos/': {
      id: '/_authenticated/dashboard/photos/'
      path: '/photos'
      fullPath: '/dashboard/photos'
      preLoaderRoute: typeof AuthenticatedDashboardPhotosIndexImport
      parentRoute: typeof AuthenticatedDashboardRouteImport
    }
  }
}

// Create and export the route tree

interface AuthenticatedDashboardRouteRouteChildren {
  AuthenticatedDashboardGuestsRoute: typeof AuthenticatedDashboardGuestsRoute
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
  AuthenticatedDashboardPhotosPhotoIdRoute: typeof AuthenticatedDashboardPhotosPhotoIdRoute
  AuthenticatedDashboardPhotosIndexRoute: typeof AuthenticatedDashboardPhotosIndexRoute
}

const AuthenticatedDashboardRouteRouteChildren: AuthenticatedDashboardRouteRouteChildren =
  {
    AuthenticatedDashboardGuestsRoute: AuthenticatedDashboardGuestsRoute,
    AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
    AuthenticatedDashboardPhotosPhotoIdRoute:
      AuthenticatedDashboardPhotosPhotoIdRoute,
    AuthenticatedDashboardPhotosIndexRoute:
      AuthenticatedDashboardPhotosIndexRoute,
  }

const AuthenticatedDashboardRouteRouteWithChildren =
  AuthenticatedDashboardRouteRoute._addFileChildren(
    AuthenticatedDashboardRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRouteRoute: typeof AuthenticatedDashboardRouteRouteWithChildren
  AuthenticatedPlansRoute: typeof AuthenticatedPlansRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRouteRoute:
    AuthenticatedDashboardRouteRouteWithChildren,
  AuthenticatedPlansRoute: AuthenticatedPlansRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/welcome': typeof WelcomeRoute
  '/dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/plans': typeof AuthenticatedPlansRoute
  '/dashboard/guests': typeof AuthenticatedDashboardGuestsRoute
  '/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/photos/$photoId': typeof AuthenticatedDashboardPhotosPhotoIdRoute
  '/dashboard/photos': typeof AuthenticatedDashboardPhotosIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/welcome': typeof WelcomeRoute
  '/plans': typeof AuthenticatedPlansRoute
  '/dashboard/guests': typeof AuthenticatedDashboardGuestsRoute
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/photos/$photoId': typeof AuthenticatedDashboardPhotosPhotoIdRoute
  '/dashboard/photos': typeof AuthenticatedDashboardPhotosIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/welcome': typeof WelcomeRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/_authenticated/plans': typeof AuthenticatedPlansRoute
  '/_authenticated/dashboard/guests': typeof AuthenticatedDashboardGuestsRoute
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/dashboard/photos/$photoId': typeof AuthenticatedDashboardPhotosPhotoIdRoute
  '/_authenticated/dashboard/photos/': typeof AuthenticatedDashboardPhotosIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/sign-in'
    | '/welcome'
    | '/dashboard'
    | '/plans'
    | '/dashboard/guests'
    | '/dashboard/'
    | '/dashboard/photos/$photoId'
    | '/dashboard/photos'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/sign-in'
    | '/welcome'
    | '/plans'
    | '/dashboard/guests'
    | '/dashboard'
    | '/dashboard/photos/$photoId'
    | '/dashboard/photos'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/sign-in'
    | '/welcome'
    | '/_authenticated/dashboard'
    | '/_authenticated/plans'
    | '/_authenticated/dashboard/guests'
    | '/_authenticated/dashboard/'
    | '/_authenticated/dashboard/photos/$photoId'
    | '/_authenticated/dashboard/photos/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  SignInRoute: typeof SignInRoute
  WelcomeRoute: typeof WelcomeRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  SignInRoute: SignInRoute,
  WelcomeRoute: WelcomeRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_authenticated",
        "/sign-in",
        "/welcome"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_authenticated": {
      "filePath": "_authenticated.tsx",
      "children": [
        "/_authenticated/dashboard",
        "/_authenticated/plans"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in.tsx"
    },
    "/welcome": {
      "filePath": "welcome.tsx"
    },
    "/_authenticated/dashboard": {
      "filePath": "_authenticated/dashboard/route.tsx",
      "parent": "/_authenticated",
      "children": [
        "/_authenticated/dashboard/guests",
        "/_authenticated/dashboard/",
        "/_authenticated/dashboard/photos/$photoId",
        "/_authenticated/dashboard/photos/"
      ]
    },
    "/_authenticated/plans": {
      "filePath": "_authenticated/plans.tsx",
      "parent": "/_authenticated"
    },
    "/_authenticated/dashboard/guests": {
      "filePath": "_authenticated/dashboard/guests.tsx",
      "parent": "/_authenticated/dashboard"
    },
    "/_authenticated/dashboard/": {
      "filePath": "_authenticated/dashboard/index.tsx",
      "parent": "/_authenticated/dashboard"
    },
    "/_authenticated/dashboard/photos/$photoId": {
      "filePath": "_authenticated/dashboard/photos/$photoId.tsx",
      "parent": "/_authenticated/dashboard"
    },
    "/_authenticated/dashboard/photos/": {
      "filePath": "_authenticated/dashboard/photos/index.tsx",
      "parent": "/_authenticated/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
