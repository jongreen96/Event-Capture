/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WelcomeRouteImport } from './routes/welcome'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'
import { Route as UploadUrlRouteImport } from './routes/upload.$url'
import { Route as AuthenticatedPlansRouteImport } from './routes/_authenticated/plans'
import { Route as AuthenticatedDashboardRouteRouteImport } from './routes/_authenticated/dashboard/route'
import { Route as AuthenticatedDashboardIndexRouteImport } from './routes/_authenticated/dashboard/index'
import { Route as AuthenticatedDashboardPhotosRouteImport } from './routes/_authenticated/dashboard/photos'
import { Route as AuthenticatedDashboardGuestsRouteImport } from './routes/_authenticated/dashboard/guests'
import { Route as AuthenticatedDashboardPhotosPhotoIdRouteImport } from './routes/_authenticated/dashboard/photos.$photoId'

const WelcomeRoute = WelcomeRouteImport.update({
  id: '/welcome',
  path: '/welcome',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const UploadUrlRoute = UploadUrlRouteImport.update({
  id: '/upload/$url',
  path: '/upload/$url',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedPlansRoute = AuthenticatedPlansRouteImport.update({
  id: '/plans',
  path: '/plans',
  getParentRoute: () => AuthenticatedRoute,
} as any)
const AuthenticatedDashboardRouteRoute =
  AuthenticatedDashboardRouteRouteImport.update({
    id: '/dashboard',
    path: '/dashboard',
    getParentRoute: () => AuthenticatedRoute,
  } as any)
const AuthenticatedDashboardIndexRoute =
  AuthenticatedDashboardIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)
const AuthenticatedDashboardPhotosRoute =
  AuthenticatedDashboardPhotosRouteImport.update({
    id: '/photos',
    path: '/photos',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)
const AuthenticatedDashboardGuestsRoute =
  AuthenticatedDashboardGuestsRouteImport.update({
    id: '/guests',
    path: '/guests',
    getParentRoute: () => AuthenticatedDashboardRouteRoute,
  } as any)
const AuthenticatedDashboardPhotosPhotoIdRoute =
  AuthenticatedDashboardPhotosPhotoIdRouteImport.update({
    id: '/$photoId',
    path: '/$photoId',
    getParentRoute: () => AuthenticatedDashboardPhotosRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/welcome': typeof WelcomeRoute
  '/dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/plans': typeof AuthenticatedPlansRoute
  '/upload/$url': typeof UploadUrlRoute
  '/dashboard/guests': typeof AuthenticatedDashboardGuestsRoute
  '/dashboard/photos': typeof AuthenticatedDashboardPhotosRouteWithChildren
  '/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/photos/$photoId': typeof AuthenticatedDashboardPhotosPhotoIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof AuthenticatedRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/welcome': typeof WelcomeRoute
  '/plans': typeof AuthenticatedPlansRoute
  '/upload/$url': typeof UploadUrlRoute
  '/dashboard/guests': typeof AuthenticatedDashboardGuestsRoute
  '/dashboard/photos': typeof AuthenticatedDashboardPhotosRouteWithChildren
  '/dashboard': typeof AuthenticatedDashboardIndexRoute
  '/dashboard/photos/$photoId': typeof AuthenticatedDashboardPhotosPhotoIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRouteWithChildren
  '/sign-in': typeof SignInRoute
  '/welcome': typeof WelcomeRoute
  '/_authenticated/dashboard': typeof AuthenticatedDashboardRouteRouteWithChildren
  '/_authenticated/plans': typeof AuthenticatedPlansRoute
  '/upload/$url': typeof UploadUrlRoute
  '/_authenticated/dashboard/guests': typeof AuthenticatedDashboardGuestsRoute
  '/_authenticated/dashboard/photos': typeof AuthenticatedDashboardPhotosRouteWithChildren
  '/_authenticated/dashboard/': typeof AuthenticatedDashboardIndexRoute
  '/_authenticated/dashboard/photos/$photoId': typeof AuthenticatedDashboardPhotosPhotoIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/sign-in'
    | '/welcome'
    | '/dashboard'
    | '/plans'
    | '/upload/$url'
    | '/dashboard/guests'
    | '/dashboard/photos'
    | '/dashboard/'
    | '/dashboard/photos/$photoId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/sign-in'
    | '/welcome'
    | '/plans'
    | '/upload/$url'
    | '/dashboard/guests'
    | '/dashboard/photos'
    | '/dashboard'
    | '/dashboard/photos/$photoId'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/sign-in'
    | '/welcome'
    | '/_authenticated/dashboard'
    | '/_authenticated/plans'
    | '/upload/$url'
    | '/_authenticated/dashboard/guests'
    | '/_authenticated/dashboard/photos'
    | '/_authenticated/dashboard/'
    | '/_authenticated/dashboard/photos/$photoId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRouteWithChildren
  SignInRoute: typeof SignInRoute
  WelcomeRoute: typeof WelcomeRoute
  UploadUrlRoute: typeof UploadUrlRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/welcome': {
      id: '/welcome'
      path: '/welcome'
      fullPath: '/welcome'
      preLoaderRoute: typeof WelcomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/upload/$url': {
      id: '/upload/$url'
      path: '/upload/$url'
      fullPath: '/upload/$url'
      preLoaderRoute: typeof UploadUrlRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/plans': {
      id: '/_authenticated/plans'
      path: '/plans'
      fullPath: '/plans'
      preLoaderRoute: typeof AuthenticatedPlansRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard': {
      id: '/_authenticated/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthenticatedDashboardRouteRouteImport
      parentRoute: typeof AuthenticatedRoute
    }
    '/_authenticated/dashboard/': {
      id: '/_authenticated/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof AuthenticatedDashboardIndexRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
    '/_authenticated/dashboard/photos': {
      id: '/_authenticated/dashboard/photos'
      path: '/photos'
      fullPath: '/dashboard/photos'
      preLoaderRoute: typeof AuthenticatedDashboardPhotosRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
    '/_authenticated/dashboard/guests': {
      id: '/_authenticated/dashboard/guests'
      path: '/guests'
      fullPath: '/dashboard/guests'
      preLoaderRoute: typeof AuthenticatedDashboardGuestsRouteImport
      parentRoute: typeof AuthenticatedDashboardRouteRoute
    }
    '/_authenticated/dashboard/photos/$photoId': {
      id: '/_authenticated/dashboard/photos/$photoId'
      path: '/$photoId'
      fullPath: '/dashboard/photos/$photoId'
      preLoaderRoute: typeof AuthenticatedDashboardPhotosPhotoIdRouteImport
      parentRoute: typeof AuthenticatedDashboardPhotosRoute
    }
  }
}

interface AuthenticatedDashboardPhotosRouteChildren {
  AuthenticatedDashboardPhotosPhotoIdRoute: typeof AuthenticatedDashboardPhotosPhotoIdRoute
}

const AuthenticatedDashboardPhotosRouteChildren: AuthenticatedDashboardPhotosRouteChildren =
  {
    AuthenticatedDashboardPhotosPhotoIdRoute:
      AuthenticatedDashboardPhotosPhotoIdRoute,
  }

const AuthenticatedDashboardPhotosRouteWithChildren =
  AuthenticatedDashboardPhotosRoute._addFileChildren(
    AuthenticatedDashboardPhotosRouteChildren,
  )

interface AuthenticatedDashboardRouteRouteChildren {
  AuthenticatedDashboardGuestsRoute: typeof AuthenticatedDashboardGuestsRoute
  AuthenticatedDashboardPhotosRoute: typeof AuthenticatedDashboardPhotosRouteWithChildren
  AuthenticatedDashboardIndexRoute: typeof AuthenticatedDashboardIndexRoute
}

const AuthenticatedDashboardRouteRouteChildren: AuthenticatedDashboardRouteRouteChildren =
  {
    AuthenticatedDashboardGuestsRoute: AuthenticatedDashboardGuestsRoute,
    AuthenticatedDashboardPhotosRoute:
      AuthenticatedDashboardPhotosRouteWithChildren,
    AuthenticatedDashboardIndexRoute: AuthenticatedDashboardIndexRoute,
  }

const AuthenticatedDashboardRouteRouteWithChildren =
  AuthenticatedDashboardRouteRoute._addFileChildren(
    AuthenticatedDashboardRouteRouteChildren,
  )

interface AuthenticatedRouteChildren {
  AuthenticatedDashboardRouteRoute: typeof AuthenticatedDashboardRouteRouteWithChildren
  AuthenticatedPlansRoute: typeof AuthenticatedPlansRoute
}

const AuthenticatedRouteChildren: AuthenticatedRouteChildren = {
  AuthenticatedDashboardRouteRoute:
    AuthenticatedDashboardRouteRouteWithChildren,
  AuthenticatedPlansRoute: AuthenticatedPlansRoute,
}

const AuthenticatedRouteWithChildren = AuthenticatedRoute._addFileChildren(
  AuthenticatedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRouteWithChildren,
  SignInRoute: SignInRoute,
  WelcomeRoute: WelcomeRoute,
  UploadUrlRoute: UploadUrlRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
